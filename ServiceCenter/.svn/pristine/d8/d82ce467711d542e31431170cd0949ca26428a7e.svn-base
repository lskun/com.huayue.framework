package com.huayue.attend.control;

import java.util.List;
import java.util.Map;

import javax.annotation.Resource;

import org.apache.log4j.Logger;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.SessionAttributes;
import org.springframework.web.bind.annotation.ModelAttribute;



import com.huayue.attend.entity.UserInfo;
import com.huayue.attend.service.AttendService;
import com.huayue.framework.util.DateUtil;

@Controller
@SessionAttributes({"userMap","departMap","leaveTypeMap"})

@RequestMapping("/attend")
public class AttendExecuteController {
	
	private static Logger log = Logger.getLogger(AttendExecuteController.class);
	
	@Resource(name="attendService")
	AttendService attendService;
	
	@ModelAttribute("userMap")
	public Map<Integer,String> getUserMap(){
		Map<Integer,String> map = attendService.getUserMap();
		return map;
	}
 	
	@ModelAttribute("departMap")
	public Map<Integer,String> getDepartMap(){
		return attendService.getDepartmentMap();
	}
	
	@ModelAttribute("leaveTypeMap")
	public Map<Integer,String> getLeaveMap(){
		return attendService.getLeaveTypeMap();
	}
	
	@RequestMapping(value="/show" ,method = RequestMethod.GET)
	public @ResponseBody List<UserInfo> showAll(){
		List<UserInfo> list = null;
		
		try{
			list = attendService.showAllUserInfo();
		}catch(Exception ex){
			log.error(ex);
		}
		return list;
	}
	
	@RequestMapping(value="/data",method = RequestMethod.POST)
	public String getUserData(@RequestParam(value="id",required = true)String id,@RequestParam(value="startTime",required = false)String startTime,
			@RequestParam(value="endTime",required = false)String endTime,ModelMap model){
		
		try{
			model.put("USER_MSG", attendService.showUserAttendData(Integer.parseInt(id), startTime, endTime));
		}catch(Exception ex){
			log.error(ex);
		}
		return "user_attend";
	}
	
	@RequestMapping(value="/calculate",method = RequestMethod.POST)
	public String calculateAttendData(@RequestParam(value="userId")String id,@RequestParam(value="startTime")String startTime,@RequestParam(value="endTime")String endTime,ModelMap model){
		try{
			model.put("AttendMap",attendService.calculateAttendData(Integer.parseInt(id), startTime, endTime));
			model.put("userId", id);
			model.put("result", "OK");
		}catch(Exception ex){
			log.error(ex);
			model.put("result", "无对应考勤记录.");
		}
		return "attend_result";
	}
	
	
	
	@RequestMapping(value="/req",method = RequestMethod.GET)
	public String reqToStatistics(ModelMap map){
		map.put("startTime", DateUtil.getMonthFirstDay() + " 00:00:00");
		map.put("endTime", DateUtil.getMonthLastDay() + " 23:59:00");
		return "statistics";
	}
}
