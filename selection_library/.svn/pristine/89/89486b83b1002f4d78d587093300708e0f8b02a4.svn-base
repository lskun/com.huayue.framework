/**
 * 
 */
package com.huayue.library.control;

import org.apache.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.bind.annotation.ExceptionHandler;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestMapping;

import com.huayue.framework.util.Format;
import com.huayue.framework.util.Page;
import com.huayue.library.domain.Acticle;
import com.huayue.library.domain.User;
import com.huayue.library.service.ActicleManagerService;
import com.huayue.library.util.Constants;

import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.io.UnsupportedEncodingException;
import java.util.HashMap;
import java.util.Map;
import java.util.Properties;

import javax.servlet.http.HttpServletRequest;
/**
 * @author lsk0414
 *
 */
@Controller
@RequestMapping("acticle")
public class ActicleManagerAct {
	
	private static Logger log = Logger.getLogger(ActicleManagerAct.class);
	
	//相关属性配置文件位置
	private static final String PROPERTY_PATH = "/config/acticle_config.properties";
	
	private static String[] countries ;
	
	private static String[] genres;
	
	private static String[] presentations;
	
	private static String[] famousMasterPieces;
	
	private static String[] times;
	
	private static Map<Integer,String> contentMap = new HashMap<Integer,String>();
	
	@Autowired
	private ActicleManagerService acticleManagerService;
	
	//加载属性文件
	static{
		InputStream is = ActicleManagerAct.class.getResourceAsStream(PROPERTY_PATH);
		Properties properties = new Properties();
		try {
			properties.load(is);
		} catch (IOException e) {
			log.error(" acticle.properties can't found or load failed by : " + e);
		}
				
		countries = properties.getProperty("country").split(",");
		genres = properties.getProperty("genre").split(",");
		presentations = properties.getProperty("presentation").split(",");
		famousMasterPieces = properties.getProperty("famousMasterpiece").split(",");
		times = properties.getProperty("times").split(",");
		
		String[] contents = properties.getProperty("content").split(",");
		
		for(int i = 0 ; i < contents.length; i++ ){
			contentMap.put(i, contents[i]);
		}
		
	}
	
	@ModelAttribute("countries")
	public String[] loadCountries(){ return countries; }
	
	@ModelAttribute("genres")
	public String[] loadGenres(){ return genres; }
	
	@ModelAttribute("presentations")
	public String[] loadPresentations(){ return presentations; }
	
	@ModelAttribute("famousMasterPieces")
	public String[] loadFamousMasterPieces(){ return famousMasterPieces; }
	
	@ModelAttribute("times")
	public String[] loadTimes(){ return times ; }
	
	@ModelAttribute("contentMap")
	public Map<Integer,String> loadContentMap(){ return contentMap; }
	
	@RequestMapping(value="addView",method=RequestMethod.GET)
	public String addView(){ return "acticle/addActicle"; }
	
	@RequestMapping(value="addActicle",method= RequestMethod.POST)
	public String addActicle(Acticle acticle,@RequestParam("file") MultipartFile multipartFile,ModelMap model,HttpServletRequest request) 
			throws Exception, IOException {
		File des;
		String directory = "";
		String target = "acticle/feedback";
		if(!multipartFile.isEmpty()){
			String fileName = multipartFile.getOriginalFilename();
			directory = Constants.BASEPATH + File.separator + fileName;
			des = new File(directory);
			
			//保存文件到本地路径
			multipartFile.transferTo(des); 
			//设置文件大小
			acticle.setSize(multipartFile.getSize());
			//设置文件后缀名
			acticle.setSuffix(fileName.substring(fileName.lastIndexOf(".") + 1));
		}
		acticle.setDirectory(directory)	;
		acticle.setCreateTime(System.currentTimeMillis());
		acticle.setUserId(
				((User)request.getSession().getAttribute("login_user")).getId());
		
		System.out.println(acticle.toString());
		
		acticleManagerService.addObj(acticle); //}catch(Exception ex){
		model.put(Constants.RESULT, Constants.SUCCESS);
		return target;
	}
	
	@SuppressWarnings("rawtypes")
	@RequestMapping(value="showActicles",method = RequestMethod.GET)
	public String showActicles(HttpServletRequest request,ModelMap model){
		//Page<Acticle> collections = acticleManagerService.findByPage(request, "com.huayue.library.mapper.ActicleMapper.findActicles");
		//model.put("pagination", collections);
		Page<Acticle> page = new Page<Acticle>();
		
		String strIndex = request.getParameter(Constants.PAGE_INDEX);
		String strSize = request.getParameter(Constants.PAGE_SIZE);
		int pageIndex = Format.isInteger(strIndex) ? Integer.parseInt(strIndex) : page.getPageIndex();
		int pageSize = Format.isInteger(strSize) ? Integer.parseInt(strSize) : page.getPageSize();
		page.setPageIndex(pageIndex);
		page.setPageSize(pageSize);
		
		for(java.util.Iterator iterator = request.getParameterMap().keySet().iterator() ; iterator.hasNext(); ){
			String name = (String)iterator.next();
			page.getParams().put(name, request.getParameter(name));
		}
		
		page = acticleManagerService.findByPage(page);
		model.put("acticleList", page);
		return null;
	}
	
	@ExceptionHandler(Exception.class)
	public String exception(Exception e,HttpServletRequest request){
		request.setAttribute(Constants.RESULT, e);
		e.printStackTrace();
		log.error(e);
		return "error";
	}
}
