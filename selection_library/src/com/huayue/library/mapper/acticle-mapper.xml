<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.huayue.library.mapper.ActicleMapper">
	<sql id="acticleColumns">
		name,
		author,
		country_id,
		genre,
		presentation,
		origin,
		first_content_id,
		second_content_id,
		comment,
		directory,
		suffix,
		size,
		famous_masterpiece,
		times,
		version,
		create_time,
		user_id
	</sql>
	<insert id="addObj" parameterType="Acticle">
		INSERT INTO library_acticle 
		(   
			<include refid="acticleColumns"/>
		)
		VALUES
		(
			#{name},
			#{author},
			#{countryId},
			#{genre},
			#{presentation},
			#{origin},
			#{firConId},
			#{secConId},
			#{comment},
			#{directory},
			#{suffix},
			#{size},
			#{famousMasterpiece},
			#{times},
			#{version},
			#{createTime},
			#{userId}
		)	
	</insert>
	<select id="findByPage" resultMap="entitiesMap.acticleResult" parameterType="Page">
		SELECT 
			id,<include refid="acticleColumns"/>
		FROM library_acticle
		<trim prefix="WHERE" prefixOverrides="AND | OR">
			<if test="params.acticleName != null and params.acticleName != ''"> name like CONCAT('%',#{params.acticleName},'%') </if>
			<if test="params.author != null and params.author != ''"> AND author like CONCAT('%',#{params.author},'%')</if>
			<if test="params.genre != null and params.genre !=''"> AND genre = #{params.genre}</if>
			<if test="params.countryId != null and params.countryId !=''"> AND country_id = #{params.countryId}</if>
			<if test="params.presentation != null and params.presentation !=''"> AND presentation = #{params.presentation}</if>
			<if test="params.firConId != null and params.firConId !=''"> AND first_content_id = #{params.firConId}</if>
			<if test="params.secConId != null and params.secConId !=''"> AND second_content_id = #{params.secConId}</if>
		</trim>	
		ORDER BY id DESC		
	</select>
	<select id="findByID" resultMap="entitiesMap.acticleResult" parameterType="int">
		SELECT 
			A.id,
			A.name,
			A.author,
			A.country_id,
			A.genre,
			A.directory,
			A.suffix,
			A.first_content_id,
			A.second_content_id,
			A.presentation,
			A.origin,
			A.comment,
			A.famous_masterpiece,
			A.times,
			A.version,
			B.id as book_id,
			B.name as book_name,
			B.publisher as book_publisher,
			B.book_description,
			B.category_id
		FROM library_acticle A left outer join library_book_info B 
		ON B.id IN (SELECT C.book_id FROM library_relation_mapping C WHERE C.acticle_id = A.id)
		WHERE A.id = #{id} 	
	</select>
	<update id="update" parameterType="Acticle">
		UPDATE library_acticle 
			SET
				name = #{name},
				author = #{author},
				genre = #{genre},
				presentation = #{presentation},
				country_id = #{countryId},
			 	origin = #{origin},
			 	first_content_id = #{firConId},
			 	second_content_id = #{secConId},
			 	comment = #{comment},
			 	famous_masterpiece = #{famousMasterpiece},
				times = #{times},
				version = #{version},
				update_time = #{updateTime}	
			WHERE id = #{id}	
	</update>
	<delete id="deleteByID" parameterType="int">
		DELETE FROM library_acticle WHERE id = #{id}
	</delete>
	
	<delete id="deleteMappings" parameterType="int">
		DELETE FROM library_relation_mapping WHERE acticle_id = #{id}
	</delete>
	
</mapper> 